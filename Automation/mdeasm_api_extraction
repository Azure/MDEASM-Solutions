<#-- Microsoft Defender External Attack Surface Management 

    Run "az login" to authorize against the tenant
    Run "az account get-access-token --scope 'https://easm.defender.microsoft.com/.default'" to generate a Bearer token

    ASSET Call Structure
    $sub_uri='assets/' + $asset_id + '?api-version=' + $api_version 
 
    ASSETS Call Structure 
    $sub_uri='assets?api-version=' + $api_version + '&filter=' + $filters

--#>

$subscription_id = '????'
$resource_group = '????'
$provider = 'Microsoft.Easm'
$workspace = '????'
$api_version = '2022-04-01-preview'
$token = 'Bearer ????'

$base_uri="https://eastus.easm.defender.microsoft.com/subscriptions/" + $subscription_id + "/resourceGroups/" + $resource_group + "/workspaces/" + $workspace + "/"
$headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
$headers.Add("Accept", "application/json")
$headers.Add("Authorization", $token) 

$filters = @(
[pscustomobject]@{filter='admin'; ui='Whois Admin Name'; description='The administrator name identified by the whois record for an asset'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='adminEmail'; ui='Whois Admin Email'; description='The administrative contact email address identified by the whois record for an asset'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='adminOrg'; ui='Whois Admin Organization'; description='The administrative organization identified by the whois record for an asset'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='asnNumber'; ui='ASN'; description='The autonomous system number that the asset is related to'; type='numeric'; operators='=, !, in, !in, empty, !empty'},
[pscustomobject]@{filter='attributeType'; ui='Attribute Type'; description=''; type='String'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='attributeTypeValue'; ui='Attribute Type & Value'; description=''; type='String'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='attributeValue'; ui='Attribute Value'; description=''; type='String'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='banner'; ui='Banner'; description='Banner content observed from a port scan of the IP Address'; type='tokenized string'; operators='#, !#, #in, !#in, empty, !empty'},
[pscustomobject]@{filter='bgpPrefix'; ui='BGP Prefix'; description='The BGP prefix for the IP Block'; type='string'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='city'; ui='City'; description=''; type='String'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='cname'; ui='Cname'; description='The CNAME that the host DNS record refers to'; type='tokenized hostname'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='cnameDomain'; ui='Cname Domain'; description='The domain from the CNAME that the host DNS record refers to'; type='tokenized hostname'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='connected'; ui='Connected'; description='Returns assets connected to the given asset'; type='string'; operators='='},
[pscustomobject]@{filter='country'; ui='Country'; description=''; type='String'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='countryCode'; ui='Country Code'; description=''; type='String'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='createdAt'; ui='Created At'; description='The date that the asset was added to inventory'; type='date'; operators='>=, <=, between'},
[pscustomobject]@{filter='cvss3BaseScore'; ui='Affected CVSS v3 Score'; description='CVSS v3 base score reflecting the severity of a CVE found on an asset'; type='numeric'; operators='=, !, in, !in, >=, <=, between, empty, !empty'},
[pscustomobject]@{filter='cvssScore'; ui='Affected CVSS Score'; description='CVSS score reflecting the severity of a CVE found on an asset'; type='numeric'; operators='=, !, in, !in, >=, <=, between, empty, !empty'},
[pscustomobject]@{filter='cweID'; ui='CWE ID'; description='The id of a CWE identified on the asset'; type='string'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='domain'; ui='Domain'; description='The domain on which the asset was registered'; type='tokenized hostname'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='domainExpiration'; ui='Domain Expiration'; description='The 30 day period in which the domain expires'; type='expiration range'; operators='=, !, in, !in'},
[pscustomobject]@{filter='domainStatus'; ui='Domain Status'; description='Domain status observed on a domain'; type='string'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='email'; ui='Whois Email'; description='Any email address identified by the whois record for an asset'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='error'; ui='Error'; description='The error encountered while crawling the page'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='externalID'; ui='External ID'; description='The external ID assigned to the asset'; type='string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='finalResponseCode'; ui='Final Response Code'; description=''; type='Numeric'; operators='=, !, in, !in, >=, <=, between, empty, !empty'},
[pscustomobject]@{filter='finalScheme'; ui='Final Scheme'; description='The scheme component of the final URI for the page after following one or more redirects'; type='string'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='finalUrl'; ui='Final URL'; description='Final URL of the page after following one or more redirects'; type='tokenized url'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='firstSeen'; ui='First Seen'; description='The date that the asset was first observed'; type='date'; operators='>=, <=, between'},
[pscustomobject]@{filter='framework'; ui='Framework'; description='Name of a framework web component identified on the page asset'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='hasMailServerRecord'; ui='Is Mail Server Record'; description='Has the asset been identified as a Mail Server'; type='boolean'; operators='=,!'},
[pscustomobject]@{filter='hasNameServerRecord'; ui='Is Name Server Record'; description='Has the asset been identified as a Name Server'; type='boolean'; operators='=,!'},
[pscustomobject]@{filter='host'; ui='Host'; description='The host that the page was served from'; type='tokenized hostname'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='ianaId'; ui='IANA ID'; description='The IANA id associated with the domain registrar'; type='string'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='ipAddress'; ui='IP Address'; description='IP addresses which the host has resolved to'; type='tokenized string'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty, between'},
[pscustomobject]@{filter='ipBlock'; ui='IP Block'; description='IP Block containing the IP Address'; type='string'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='ipv4'; ui='IPv4'; description=''; type='boolean'; operators='=,!'},
[pscustomobject]@{filter='ipv6'; ui='IPv6'; description=''; type='boolean'; operators='=,!'},
[pscustomobject]@{filter='issuerAlternativeName'; ui='Cert Issuer Alternative Name'; description='The SSL certificate alternative issuer names'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='issuerCommonName'; ui='Cert Issuer Common Name'; description='The SSL certificate issuer common name'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='keyAlgorithm'; ui='Cert Key Algorithm'; description=''; type='String'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='keySize'; ui='Cert Key Size'; description='The key size of the SSL certificate'; type='numeric'; operators='=, !, in, !in, >=, <=, between, empty, !empty'},
[pscustomobject]@{filter='kind'; ui='Kind'; description='Asset kind'; type='enumeration'; operators='=, !, in, !in, empty, !empty'},
[pscustomobject]@{filter='language'; ui='Language'; description='The language of the the page'; type='string'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='lastSeen'; ui='Last Seen'; description='The date that the asset was most recently observed'; type='date'; operators='>=, <=, between'},
[pscustomobject]@{filter='name'; ui='Name'; description='Name of the asset'; type='string'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in'},
[pscustomobject]@{filter='nameServer'; ui='Name Server'; description='Name Server registered on a domain'; type='tokenized hostname'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='pageLive'; ui='Live'; description='Is the page active'; type='boolean'; operators='=,!'},
[pscustomobject]@{filter='pageTitle'; ui='Title'; description='Title of the page'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='parkedDomain'; ui='Parked Domain'; description='Has the domain been identified as parked'; type='boolean'; operators='=,!'},
[pscustomobject]@{filter='parkedPage'; ui='Parked Page'; description='Has the page been identified as parked'; type='boolean'; operators='=,!'},
[pscustomobject]@{filter='port'; ui='Port'; description='Port identified on an IP Address'; type='numeric'; operators='=, in, !, !in'},
[pscustomobject]@{filter='portLastSeen'; ui='Port Last Seen'; description='Period in which the port has been observed open'; type='enumeration'; operators='=, in'},
[pscustomobject]@{filter='portState'; ui='Port State'; description=''; type='Enumeration'; operators='=, in'},
[pscustomobject]@{filter='region'; ui='State/Province'; description=''; type='String'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='regionCode'; ui='State/Province Code'; description=''; type='String'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='registrant'; ui='Whois Registrant Name'; description='The registrant name identified by the whois record for an asset'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='registrantEmail'; ui='Whois Registrant Email'; description='The registrant email address identified by the whois record for an asset'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='registrantOrg'; ui='Whois Registrant Organization'; description='The registrant organization identified by the whois record for an asset'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='registrar'; ui='Registrar'; description='The registrar identified by the whois record for an asset'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='removedState'; ui='Removed From Inventory'; description='Remove an asset from inventory'; type='enumeration'; operators='=, !, in, !in, empty, !empty'},
[pscustomobject]@{filter='reputationName'; ui='Reputation Name'; description='The name of the IP reputation list that this asset was found on'; type='string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='reputationType'; ui='Reputation Type'; description='The threat type associated with the reputation list that this asset was found on'; type='string'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='resourceHost'; ui='Resource Host'; description='The hostname of a dependent resource found on the page'; type='tokenized hostname'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='resourceMd5'; ui='Resource MD5'; description='The md5 hash of the content of a dependent resource found on the page'; type='string'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='resourceUrl'; ui='Resource URL'; description='The url of a dependent resource found on the page'; type='tokenized url'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='responseCode'; ui='Response Code'; description='The http response code returned by the page'; type='numeric'; operators='=, !, in, !in, >=, <=, between, empty, !empty'},
[pscustomobject]@{filter='rootUrl'; ui='Root Page'; description='Is the page a root page, meaning a hostname prepended with the http or https protocol'; type='boolean'; operators='=,!'},
[pscustomobject]@{filter='scheme'; ui='Scheme'; description='The scheme component of the URI for the page'; type='string'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='securityPolicy'; ui='Security Policy'; description='Security policy violations identified on the page'; type='string'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='selfSigned'; ui='Self Signed'; description='Is the SSL certificate self signed'; type='boolean'; operators='=,!'},
[pscustomobject]@{filter='serialNumber'; ui='Cert Serial Number'; description='The ssl certificate serial number'; type='string'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='server'; ui='Server'; description='Name of a server web component identified on the page asset'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='signatureAlgorithm'; ui='Cert Signature Algorithm'; description='The SSL certificate signature algorithm'; type='string'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='signatureAlgorithmOid'; ui='Cert Signature Algorithm Oid'; description='The SSL certificate signature algorithm OID'; type='string'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='sslCertExpiration'; ui='Cert Expiration'; description='The 30 day period in which the SSL certificate expires'; type='expiration range'; operators='=, !, in, !in'},
[pscustomobject]@{filter='sslCertIssuerOrganization'; ui='Cert Issuer Organization'; description=''; type='Tokenized String'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='sslCertIssuerOrganizationalUnit'; ui='Cert Issuer Organizational Unit'; description=''; type='Tokenized String'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='sslCertOrganization'; ui='Cert Organization'; description='The name of the organization which registered the SSL certificate'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='sslCertOrganizationalUnit'; ui='Cert Organizational Unit'; description='The unit within the organization which registered the SSL certificate'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='sslCertSubjectOrganization'; ui='Cert Subject Organization'; description='The SSL certificate subject organization'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='sslCertSubjectOrganizationalUnit'; ui='Cert Subject Organizational Unit'; description='The SSL certificate subject organizational uni'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='state'; ui='State'; description='Asset state'; type='enumeration'; operators='=, !, in, !in, empty, !empty'},
[pscustomobject]@{filter='subjectAlternativeName'; ui='Cert Subject Alternative Name'; description='The SSL certificate alternative subject names'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='subjectCommonName'; ui='Cert Subject Common Name'; description='The SSL certificate subject common name'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='techEmail'; ui='Whois Technical Email'; description='The technical contact email address identified by the whois record for an asset'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='technical'; ui='Whois Technical Name'; description='The technical contact name identified by the whois record for an asset'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='technicalOrg'; ui='Whois Technical Organization'; description='The technical contact organization identified by the whois record for an asset'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='updatedAt'; ui='Updated At'; description='The date of the most recent update performed by a user action'; type='date'; operators='>=, <=, between'},
[pscustomobject]@{filter='url'; ui='URL'; description='URL of the page'; type='tokenized url'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='uuid'; ui='UUID'; description='Asset unique identifier'; type='string'; operators='=, !, in, !in'},
[pscustomobject]@{filter='validationType'; ui='Cert Validation'; description=''; type='String'; operators='=, !, in, !in, empty, !empty'},
[pscustomobject]@{filter='webComponentName'; ui='Web Component Name'; description='Name of web component observed on the asset'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='webComponentNameVersion'; ui='Web Component Name & Version'; description='Full name including the name and version of web component observed on the asset'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='webComponentService'; ui='Web Component Service'; description=''; type='String'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='webComponentType'; ui='Web Component Type'; description='Type of WebComponent observed on the asset'; type='tokenized'; operators='=, !, ^=, !^=, in, !in, ^=in, !^=in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='webComponentVersion'; ui='Web Component Version'; description='Version of web component observed on the asset'; type='tokenized string'; operators='=, !, ^=, !^=, #, !#, in, !in, ^=in, !^=in, #in, !#in, ~, !~, ~in, !~in, empty, !empty'},
[pscustomobject]@{filter='webServer'; ui='Web Server'; description='Has the asset been identified as a Web Server'; type='boolean'; operators='=,!'},
[pscustomobject]@{filter='wildcard'; ui='Wildcard'; description='Has the asset been identified as a wildcard'; type='boolean'; operators='=,!'}
)


#---------------------------------------------------------------
#ASSETS
#---------------------------------------------------------------

function get_assets ($link) {

    if ($link) {
        $uri = $link
    } else {
        $sub_uri='assets?api-version=' + $api_version
        $uri = $base_uri + $sub_uri
    }
            
    echo $uri
    $response=Invoke-RestMethod -Uri $uri -Method 'GET' -Headers $headers 
    $data = $response | ConvertTo-Json

    $str_totalelements = $response.totalElements
    $str_totalpages = $response.totalPages
    $str_last = $response.last
    $str_numberofelements = $response.numberOfElements
    $str_first = $response.first
    $str_size = $response.size
    $str_pgnumber = $response.number
    $ary_content = $response.content
    $mark = $response.mark
    $nextlink = $response.nextLink

    #echo "str_totalelements: $str_totalelements"
    #echo "str_totalpages: $str_totalpages"
    #echo "str_last: $str_last"
    #echo "str_numberofelements: $str_numberofelements"
    #echo "str_first: $str_first"
    #echo "str_size: $str_size"
    #echo "str_number: $str_number"
    #echo "ary_content: " $ary_content
    
    $splunk_event = @{
    host=$env:COMPUTERNAME
    sourcetype="MDEASM"
    event = @{
    message="Defender External Attack Surface Management"
    page_number=$str_pgnumber
    assets=$ary_content
    }
    } | ConvertTo-Json

    $headers = @{Authorization = "Splunk f34ab1ec-ac65-4dd8-b917-a3fd5310fbf1"}
    $splunk_server = "https://logsearchec.johnshopkins.edu:8088/services/collector/event"
    $splunk_response = Invoke-RestMethod -Uri $splunk_server -Method Post -Headers $headers -Body $splunk_event
    "Code:'" + $splunk_response.code + "' text:'"+ $splunk_response.text + "'"   

    #if ($nextlink) {
    #    echo "going to loop again"
    #    Start-Sleep -Seconds 1.5
    #    get_assets $nextlink
    #}
    
}


#----------------------------------------------------------------------
#ASSET:  Not a complete break down, but as far as I am going to take it 
#----------------------------------------------------------------------

function get_asset {
    $asset_id = 'f6f7d875-bba8-c9e7-9046-e2cf9b71d4ab'
    $sub_uri='assets/' + $asset_id + '?api-version=' + $api_version
    $uri = $base_uri + $sub_uri
            
    echo $uri
    $response=Invoke-RestMethod -Uri $uri -Method 'GET' -Headers $headers
    $data = $response | ConvertTo-Json    

    $str_id = $response.id
    $str_name = $response.name
    $str_displayname = $response.displayName
    $str_kind = $response.kind
    $str_uuid = $response.uuid
    $str_createddate = $response.createdDate
    $str_updateddate = $response.updatedDate
    $str_state = $response.state
    $str_externalid = $response.externalId
    $ary_labels = $response.labels
    $str_wildcard = $response.wildcard
    $str_discogroupname = $response.discoGroupName
    $ary_audittrail = $response.auditTrail
    $str_reason = $response.reason
    $ary_asset = $response.asset

    echo "str_id : $str_id"
    echo "str_name : $str_name"
    echo "str_displayname : $str_displayname"
    echo "str_kind : $str_kind"
    echo "str_uuid : $str_uuid"
    echo "str_createddate : $str_createddate"
    echo "str_updateddate : $str_updateddate"
    echo "str_state : $str_state"
    echo "str_externalid : $str_externalid"    
    echo "ary_labels : $ary_labels"  
    echo "str_wildcard : $str_wildcard"
    echo "str_discogroupname : $str_discogroupname"
    echo "ary_audittrail : $ary_audittrail"
    echo "str_reason : $str_reason"
    
    echo "ary_asset:" $ary_asset

    foreach ($item in $ary_asset) { 

        $str_asset_host = $item.host
        $str_asset_domain = $item.domain
        $str_asset_firstseen = $item.firstSeen
        $str_asset_lastseen = $item.lastSeen
        $str_asset_count = $item.count
        
        echo "str_asset_host: $str_asset_host"
        echo "str_asset_domain: $str_asset_domain"
        echo "str_asset_firstseen: $str_asset_firstseen"
        echo "str_asset_lastseen: $str_asset_lastseen"
        echo "str_asset_count: $str_asset_count"
        
        #NOTE: Just going to echo the array values.  You can define variables, similar to above, as you need

        $ary_asset_ipaddresses = $item.ipAddresses
        $ary_asset_webcomponents = $item.webComponents
        $ary_asset_headers = $item.headers
        $ary_asset_attributes = $item.attributes
        $ary_asset_cookies = $item.cookies
        $ary_asset_sslcerts = $item.sslCerts
        $ary_asset_parenthosts = $item.parentHosts
        $ary_asset_childhosts = $item.childHosts
        $str_asset_hostcore_host = $item.asset.hostCore.host
        $str_asset_hostcore_domain = $item.hostCore.domain
        $str_asset_hostcore_firstseen = $item.hostCore.domain
        $str_asset_hostcore_lastseen = $item.hostCore.domain
        $str_asset_hostcore_count = $item.hostCore.domain
        $str_asset_hostcore_alexarank = $item.hostCore.domain 
        $ary_asset_services = $item.services
        $ary_asset_cnames = $item.cnames
        $ary_asset_sources = $item.sources
        $ary_asset_resourceurls = $item.resourceUrls
        $ary_asset_scanmetadata = $item.scanMetadata
        $ary_asset_asns = $item.asns
        $ary_asset_resourceurls = $item.resourceUrls
        $ary_asset_ipblocks = $item.ipBlocks
        $ary_asset_responsebodies = $item.responseBodies
        $str_asset_domainsasset_domain = $item.domainAsset.domain
        $str_asset_domainsasset_whoisid = $item.domainAsset.whoisId
        $str_asset_domainsasset_registrarIanaIds = $item.domainAsset.registrarIanaIds
        $str_asset_domainsasset_registrantContacts = $item.domainAsset.registrantContacts
        $str_asset_domainsasset_registrantOrgs = $item.domainAsset.registrantOrgs
        $str_asset_domainsasset_adminContacts = $item.domainAsset.adminContacts
        $str_asset_domainsasset_technicalContacts = $item.domainAsset.technicalContacts
        $str_asset_domainsasset_alexaInfos = $item.domainAsset.alexaInfos
        $str_asset_domainsasset_nameServers = $item.domainAsset.nameServers
        $str_asset_domainsasset_mailServers = $item.domainAsset.mailServers
        $str_asset_domainsasset_whoisServers = $item.domainAsset.whoisServers
        $str_asset_domainsasset_domainStatuses = $item.domainAsset.domainStatuses
        $str_asset_domainsasset_registrarCreatedAt = $item.domainAsset.registrarCreatedAt
        $str_asset_domainsasset_registrarUpdatedAt = $item.domainAsset.registrarUpdatedAt
        $str_asset_domainsasset_registrarExpiresAt = $item.domainAsset.registrarExpiresAt
        $str_asset_domainsasset_soaRecords = $item.domainAsset.soaRecords
        $str_asset_domainsasset_detailedFromWhoisAt = $item.domainAsset.detailedFromWhoisAt
        $str_asset_domainsasset_registrarNames = $item.domainAsset.registrarNames
        $str_asset_domainsasset_sources = $item.domainAsset.sources
        $str_asset_domainsasset_firstSeen = $item.domainAsset.firstSeen
        $str_asset_domainsasset_lastSeen = $item.domainAsset.lastSeen
        $str_asset_domainsasset_count = $item.domainAsset.count
        $str_asset_domainsasset_parkedDomain = $item.domainAsset.parkedDomain
        $str_asset_domainsasset_registrantNames = $item.domainAsset.registrantNames
        $str_asset_domainsasset_adminNames = $item.domainAsset.adminNames
        $str_asset_domainsasset_technicalNames = $item.domainAsset.technicalNames
        $str_asset_domainsasset_adminOrgs = $item.domainAsset.adminOrgs
        $str_asset_domainsasset_technicalOrgs = $item.domainAsset.technicalOrgs
        $str_asset_domainsasset_registrantPhones = $item.domainAsset.registrantPhones
        $str_asset_domainsasset_adminPhones = $item.domainAsset.adminPhones
        $str_asset_domainsasset_technicalPhones = $item.domainAsset.technicalPhones
        $ary_asset_nsrecords = $item.nsRecord
        $ary_asset_mxrecords = $item.mxRecord
        $ary_asset_webserver = $item.webserver
        $ary_asset_location = $item.location
        $ary_asset_nxdomain = $item.nxdomain
        $ary_asset_sslServerConfig = $item.sslServerConfig
        $ary_asset_iswildcard = $item.isWildcard
        $ary_asset_banners = $item.banners
        $ary_asset_ipv4 = $item.ipv4
        $ary_asset_ipv6 = $item.ipv6

        echo "ary_asset_ipaddresses:" $item.ipAddresses
        echo "ary_asset_webcomponents:" $item.webComponents
        echo "ary_asset_headers:" $item.headers
        echo "ary_asset_attributes:" $item.attributes
        echo "ary_asset_cookies:" $item.cookies
        echo "ary_asset_sslcerts:" $item.sslCerts
        echo "ary_asset_parenthosts:" $item.parentHosts
        echo "ary_asset_childhosts:" $item.childHosts
        echo "str_asset_hostcore_host:" $item.asset.hostCore.host
        echo "str_asset_hostcore_domain:" $item.hostCore.domain
        echo "str_asset_hostcore_firstseen:" $item.hostCore.domain
        echo "str_asset_hostcore_lastseen:" $item.hostCore.domain
        echo "str_asset_hostcore_count:" $item.hostCore.domain
        echo "str_asset_hostcore_alexarank:" $item.hostCore.domain
        echo "ary_asset_services:" $item.services
        echo "ary_asset_cnames:" $item.cnames
        echo "ary_asset_sources:" $item.sources
        echo "ary_asset_resourceurls:" $item.resourceUrls
        echo "ary_asset_scanmetadata:" $item.scanMetadata
        echo "ary_asset_asns:" $item.asns        
	    echo "ary_asset_resourceurls:" $item.resourceUrls
        echo "ary_asset_ipblocks:" $item.ipBlocks
        echo "ary_asset_responsebodies:" $item.responseBodies
        echo "str_asset_domainsasset_domain:" $item.domainAsset.domain
        echo "str_asset_domainsasset_whoisid:" $item.domainAsset.whoisId
        echo "str_asset_domainsasset_registrarIanaIds:" $item.domainAsset.registrarIanaIds
        echo "str_asset_domainsasset_registrantContacts:" $item.domainAsset.registrantContacts
        echo "str_asset_domainsasset_registrantOrgs:" $item.domainAsset.registrantOrgs
        echo "str_asset_domainsasset_adminContacts:" $item.domainAsset.adminContacts
        echo "str_asset_domainsasset_technicalContacts:" $item.domainAsset.technicalContacts
        echo "str_asset_domainsasset_alexaInfos:" $item.domainAsset.alexaInfos
        echo "str_asset_domainsasset_nameServers:" $item.domainAsset.nameServers
        echo "str_asset_domainsasset_mailServers:" $item.domainAsset.mailServers
        echo "str_asset_domainsasset_whoisServers:" $item.domainAsset.whoisServers
        echo "str_asset_domainsasset_domainStatuses:" $item.domainAsset.domainStatuses
        echo "str_asset_domainsasset_registrarCreatedAt:" $item.domainAsset.registrarCreatedAt
        echo "str_asset_domainsasset_registrarUpdatedAt:" $item.domainAsset.registrarUpdatedAt
        echo "str_asset_domainsasset_registrarExpiresAt:" $item.domainAsset.registrarExpiresAt
        echo "str_asset_domainsasset_soaRecords:" $item.domainAsset.soaRecords
        echo "str_asset_domainsasset_detailedFromWhoisAt:" $item.domainAsset.detailedFromWhoisAt
        echo "str_asset_domainsasset_registrarNames:" $item.domainAsset.registrarNames
        echo "str_asset_domainsasset_sources:" $item.domainAsset.sources
        echo "str_asset_domainsasset_firstSeen:" $item.domainAsset.firstSeen
        echo "str_asset_domainsasset_lastSeen:" $item.domainAsset.lastSeen
        echo "str_asset_domainsasset_count:" $item.domainAsset.count
        echo "str_asset_domainsasset_parkedDomain:" $item.domainAsset.parkedDomain
        echo "str_asset_domainsasset_registrantNames:" $item.domainAsset.registrantNames
        echo "str_asset_domainsasset_adminNames:" $item.domainAsset.adminNames
        echo "str_asset_domainsasset_technicalNames:" $item.domainAsset.technicalNames
        echo "str_asset_domainsasset_adminOrgs:" $item.domainAsset.adminOrgs
        echo "str_asset_domainsasset_technicalOrgs:" $item.domainAsset.technicalOrgs
        echo "str_asset_domainsasset_registrantPhones:" $item.domainAsset.registrantPhones
        echo "str_asset_domainsasset_adminPhones:" $item.domainAsset.adminPhones
        echo "str_asset_domainsasset_technicalPhones:" $item.domainAsset.technicalPhones
        echo "ary_asset_nsrecords:" $item.nsRecord
        echo "ary_asset_mxrecords:" $item.mxRecord
        echo "ary_asset_webserver:" $item.webserver
        echo "ary_asset_location:" $item.location
        echo "ary_asset_nxdomain:" $item.nxdomain
        echo "ary_asset_sslServerConfig:" $item.sslServerConfig
        echo "ary_asset_iswildcard:" $item.isWildcard
        echo "ary_asset_banners:" $item.banners
        echo "ary_asset_ipv4:" $item.ipv4
        echo "ary_asset_ipv6:" $item.ipv6

    }
}


#---------------------------------------------------------------
# API TESTING: Type+Operator queries for all dates and booleans
#---------------------------------------------------------------

function api_testing {

    for ($i = 0; $i -lt $filters.Length; ++$i) {

        # NOTE: state is hard set to confirmed vs iterating through each
        # NOTE: kind is hard set to host vs iterating through each

        $state = "confirmed"
        $kind = "host"
        $filtername=$filters[$i].filter
        $uiname=$filters[$i].ui
        $description=$filters[$i].description
        $type=$filters[$i].type
        $operators=$filters[$i].operators -split ","
        $query_filter=$filtername + '=!empty'
            
        #Types
        #---------
        #boolean
        #date
        #enumeration
        #expiration range
        #numeric
        #String
        #tokenized
        #tokenized hostname
        #tokenized string
        #tokenized url

        if ($type -eq 'date') {

            for ($x = 0; $x -lt $operators.Length; ++$x) {
          
                $date_filter = Get-Date (Get-Date).ToUniversalTime() -UFormat '+%Y-%m-%dT%H:%M:%S.000Z'
            
                if ($operators[$x].Trim() -eq 'between') {

                    #NOTE: Between date early value hard set to -1 day 
            
                    $date_filter2 = Get-Date (Get-Date).ToUniversalTime().AddDays(-1) -UFormat '+%Y-%m-%dT%H:%M:%S.000Z'
                    $filter_string='state="' + $state + '" AND ' + $filtername + ' ' + $operators[$x] + ' "' + $date_filter2 + '"' + ' "' + $date_filter + '"'
            
                } else {
                    $filter_string='state="' + $state + '" AND ' + $filtername + ' ' + $operators[$x] + ' "' + $date_filter + '"'
                }

                $sub_uri='assets?api-version=' + $api_version + '&filter=' + $filter_string 
                $uri = $base_uri + $sub_uri
            
                echo $uri
                $response=Invoke-RestMethod -Uri $uri -Method 'GET' -Headers $headers 
                $response | ConvertTo-Json
            }
       
        } elseif ($type -eq 'boolean') {
    
                # TRUE
                # --------------
            
                $filter_string='state="' + $state + '" AND ' + $filtername + '="TRUE"'
                $sub_uri='assets?api-version=' + $api_version + '&filter=' + $filter_string 
                $uri = $base_uri + $sub_uri
            
                echo $uri
                $response=Invoke-RestMethod -Uri $uri -Method 'GET' -Headers $headers 
                $response | ConvertTo-Json        

                # FALSE
                # --------------
            
                $filter_string='state="' + $state + '" AND ' + $filtername + '="FALSE"'

                $sub_uri='assets?api-version=' + $api_version + '&filter=' + $filter_string 
                $uri = $base_uri + $sub_uri
            
                echo $uri
                $response=Invoke-RestMethod -Uri $uri -Method 'GET' -Headers $headers 
                $response | ConvertTo-Json        

        }
     
    }
}


#get_asset
get_assets
#api_testing
