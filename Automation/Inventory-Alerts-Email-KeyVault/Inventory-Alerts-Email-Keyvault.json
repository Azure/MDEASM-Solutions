{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"metadata": {
		"comments": "Automation: Azure Logic App process to Monitor Inventory Assets and alert via Email notifications for required or custom Inventory query using Azure KeyVault for storing EASM API Client Secrets",
		"author": "MD EASM Go-To-Production (GTP) Customer Experience Engineering (CxE) Team. Email: mdeasm_cxe@microsoft.com"
	},
	"parameters": {
		"workflows_Inventory_Alerts_Email_KeyVault_name": {
			"defaultValue": "Inventory-Alerts-Email-KeyVault",
			"type": "String"
		},
		"ClientId": {
			"defaultValue": "",
			"type": "String"
		},
		"KeyVaultSecretName": {
			"defaultValue": "",
			"type": "String"
		},
		"EASMWorkspaceName": {
			"defaultValue": "",
			"type": "String"
		},
		"Region": {
			"defaultValue": "",
			"type": "String",
			"allowedValues": [
				"southcentralus",
				"eastus",
				"australiaeast",
				"westus3",
				"swedencentral",
				"eastasia",
				"japaneast",
				"westeurope",
				"northeurope",
				"switzerlandnorth",
				"canadacentral",
				"centralus",
				"norwayeast",
				"francecentral",
				""
			],
			"metadata": {
				"description": "Allowed Azure region values, southcentralus, eastus, australiaeast, westus3, swedencentral, eastasia, japaneast, westeurope, northeurope, switzerlandnorth, canadacentral, centralus, norwayeast, francecentral"
			}
		},
		"RunFrequency": {
			"defaultValue": 1,
			"type": "Int",
			"metadata": {
				"description": "Run Frequency is in Hours"
			}
		},
		"api-version": {
			"defaultValue": "2022-11-01-preview",
			"type": "String"
		},
		"filter": {
			"defaultValue": "state = \"confirmed\"",
			"type": "String"
		},
		"LabelName": {
			"defaultValue": "EmailAlert",
			"type": "String"
		},
		"maxpagesize": {
			"defaultValue": "100",
			"type": "String"
		}
	},
	"variables": {
		"Office365ConnectionName": "[concat('Office365-', parameters('workflows_Inventory_Alerts_Email_KeyVault_name'))]",
		"KeyvaultConnectionName": "[concat('Keyvault-', parameters('workflows_Inventory_Alerts_Email_KeyVault_name'))]"
	},
	"resources": [
		{
			"type": "Microsoft.Web/connections",
			"apiVersion": "2016-06-01",
			"name": "[variables('Office365ConnectionName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"api": {
					"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
				}
			}
		},
		{
			"type": "Microsoft.Web/connections",
			"apiVersion": "2016-06-01",
			"name": "[variables('KeyvaultConnectionName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"api": {
					"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
				}
			}
		},
		{
			"type": "Microsoft.Logic/workflows",
			"apiVersion": "2017-07-01",
			"name": "[parameters('workflows_Inventory_Alerts_Email_KeyVault_name')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
				"[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
			],
			"properties": {
				"state": "Enabled",
				"definition": {
					"$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {
						"$connections": {
							"defaultValue": {},
							"type": "Object"
						},
						"ClientId": {
							"defaultValue": "",
							"type": "String"
						},
						"EASMWorkspaceName": {
							"defaultValue": "",
							"type": "String"
						},
						"KeyVaultSecretName": {
							"defaultValue": "",
							"type": "String"
						},
						"LabelName": {
							"defaultValue": "EmailAlert",
							"type": "String"
						},
						"Region": {
							"defaultValue": "eastus",
							"type": "String",
							"allowedValues": [
								"southcentralus",
								"eastus",
								"australiaeast",
								"westus3",
								"swedencentral",
								"eastasia",
								"japaneast",
								"westeurope",
								"northeurope",
								"switzerlandnorth",
								"canadacentral",
								"centralus",
								"norwayeast",
								"francecentral"
							]
						},
						"ResourceGroupName": {
							"defaultValue": "[resourceGroup().name]",
							"type": "String"
						},
						"RunFrequency": {
							"defaultValue": 1,
							"type": "Int"
						},
						"SubscriptionId": {
							"defaultValue": "[subscription().subscriptionId]",
							"type": "String"
						},
						"TenantId": {
							"defaultValue": "[subscription().tenantId]",
							"type": "String"
						},
						"api-version": {
							"defaultValue": "2022-11-01-preview",
							"type": "String"
						},
						"filter": {
							"defaultValue": "state = \"confirmed\"",
							"type": "String"
						},
						"maxpagesize": {
							"defaultValue": "100",
							"type": "String"
						}
					},
					"triggers": {
						"Recurrence": {
							"recurrence": {
								"frequency": "Hour",
								"interval": "@parameters('RunFrequency')"
							},
							"evaluatedRecurrence": {
								"frequency": "Hour",
								"interval": 1
							},
							"type": "Recurrence",
							"conditions": [],
							"runtimeConfiguration": {
								"concurrency": {
									"runs": 1
								}
							}
						}
					},
					"actions": {
						"Condition": {
							"actions": {
								"Create_Label": {
									"runAfter": {},
									"limit": {
										"timeout": "PT90S"
									},
									"type": "Http",
									"inputs": {
										"authentication": {
											"audience": "https://management.core.windows.net/",
											"clientId": "@parameters('ClientId')",
											"secret": "@body('Get_secret')?['value']",
											"tenant": "@parameters('TenantId')",
											"type": "ActiveDirectoryOAuth"
										},
										"body": {},
										"headers": {
											"Content-Type": "application/json",
											"User-Agent": "GitHub-LogicApps-EmailAlerts"
										},
										"method": "PUT",
										"queries": {
											"api-version": "2022-04-01-preview"
										},
										"retryPolicy": {
											"count": 10,
											"interval": "PT20S",
											"type": "fixed"
										},
										"uri": "https://management.azure.com/subscriptions/@{parameters('SubscriptionId')}/resourceGroups@{parameters('ResourceGroupName')}/providers/Microsoft.Easm/workspaces/@{parameters('EASMWorkspaceName')}/labels/@{parameters('LabelName')}"
									}
								},
								"Update_Assets": {
									"runAfter": {
										"Create_Label": [
											"Succeeded"
										]
									},
									"limit": {
										"timeout": "PT90S"
									},
									"type": "Http",
									"inputs": {
										"authentication": {
											"audience": "https://easm.defender.microsoft.com/",
											"clientId": "@parameters('ClientId')",
											"secret": "@body('Get_secret')?['value']",
											"tenant": "@parameters('TenantId')",
											"type": "ActiveDirectoryOAuth"
										},
										"body": {
											"labels": {
												"@{parameters('LabelName')}": true
											}
										},
										"headers": {
											"Content-Type": "application/json",
											"User-Agent": "GitHub-LogicApps-EmailAlerts"
										},
										"method": "PATCH",
										"queries": {
											"api-version": "@parameters('api-version')",
											"filter": "@{parameters('filter')} and label != @{parameters('LabelName')}"
										},
										"retryPolicy": {
											"count": 10,
											"interval": "PT20S",
											"type": "fixed"
										},
										"uri": "https://@{parameters('Region')}.easm.defender.microsoft.com/subscriptions/@{parameters('SubscriptionId')}/resourceGroups/@{parameters('ResourceGroupName')}/workspaces/@{parameters('EASMWorkspaceName')}/assets"
									}
								}
							},
							"runAfter": {
								"Update_EASM_Asset": [
									"Failed",
									"TimedOut"
								]
							},
							"expression": {
								"and": [
									{
										"equals": [
											"@outputs('Update_EASM_Asset')['statusCode']",
											400
										]
									}
								]
							},
							"type": "If",
							"description": "If label does not exist, this path creates it and then updates assets with newly created label"
						},
						"Create_CSV_table": {
							"runAfter": {
								"Parse_JSON": [
									"Succeeded"
								]
							},
							"type": "Table",
							"inputs": {
								"format": "CSV",
								"from": "@body('Parse_JSON')"
							}
						},
						"Get_secret": {
							"runAfter": {},
							"type": "ApiConnection",
							"inputs": {
								"host": {
									"connection": {
										"name": "@parameters('$connections')['keyvault_1']['connectionId']"
									}
								},
								"method": "get",
								"path": "/secrets/@{encodeURIComponent(parameters('KeyVaultSecretName'))}/value"
							}
						},
						"Parse_JSON": {
							"runAfter": {
								"Scheduled_Query_to_EASM": [
									"Succeeded"
								]
							},
							"type": "ParseJson",
							"inputs": {
								"content": "@body('Scheduled_Query_to_EASM')?['content']",
								"schema": {
									"items": {
										"properties": {
											"asset": {
												"properties": {},
												"type": "object"
											},
											"auditTrail": {
												"type": [
													"array",
													"null"
												]
											},
											"createdDate": {
												"type": [
													"string",
													"null"
												]
											},
											"discoGroupName": {
												"type": [
													"string",
													"null"
												]
											},
											"displayName": {
												"type": [
													"string",
													"null"
												]
											},
											"externalId": {
												"type": [
													"string",
													"null"
												]
											},
											"history": {
												"type": [
													"string",
													"array",
													"null"
												]
											},
											"id": {
												"type": [
													"string",
													"null"
												]
											},
											"kind": {
												"type": [
													"string",
													"null"
												]
											},
											"labels": {
												"type": [
													"array",
													"null"
												]
											},
											"name": {
												"type": [
													"string",
													"null"
												]
											},
											"reason": {
												"type": [
													"string",
													"null"
												]
											},
											"state": {
												"type": [
													"string",
													"null"
												]
											},
											"updatedDate": {
												"type": [
													"string",
													"null"
												]
											},
											"uuid": {
												"type": [
													"string",
													"null"
												]
											},
											"wildcard": {
												"type": [
													"boolean",
													"null"
												]
											}
										},
										"required": [],
										"type": "object"
									},
									"type": "array"
								}
							}
						},
						"Scheduled_Query_to_EASM": {
							"runAfter": {
								"Get_secret": [
									"Succeeded"
								]
							},
							"type": "Http",
							"inputs": {
								"authentication": {
									"audience": "https://easm.defender.microsoft.com/",
									"clientId": "@parameters('ClientId')",
									"secret": "@body('Get_secret')?['value']",
									"tenant": "@parameters('TenantId')",
									"type": "ActiveDirectoryOAuth"
								},
								"method": "GET",
								"queries": {
									"api-version": "@parameters('api-version')",
									"filter": "@{parameters('filter')} and label != @{parameters('LabelName')}",
									"mark": "*",
									"maxpagesize": "@parameters('maxpagesize')"
								},
								"retryPolicy": {
									"count": 10,
									"interval": "PT10S",
									"type": "fixed"
								},
								"uri": "https://@{parameters('Region')}.easm.defender.microsoft.com/subscriptions/@{parameters('SubscriptionId')}/resourceGroups/@{parameters('ResourceGroupName')}/workspaces/@{parameters('EASMWorkspaceName')}/assets"
							}
						},
						"Send_an_email_(V2)": {
							"runAfter": {
								"Create_CSV_table": [
									"Succeeded"
								]
							},
							"type": "ApiConnection",
							"inputs": {
								"body": {
									"Attachments": [
										{
											"ContentBytes": "@{base64(body('Create_CSV_table'))}",
											"Name": "EASM_alerts.csv"
										}
									],
									"Body": "<p>Hi,<br>\n<br>\nMDEASM detected  Assets in your Inventory matching your monitoring query,<br>\n@{parameters('filter')}<br>\n<br>\nPlease check your EASM Inventory for individual Asset details found in this alert.<br>\nAlso, attached is list of these assets for your reference in CSV format. <br>\n<br>\n---<br>\nThanks for using MDEASM Alerts&nbsp;</p>",
									"Importance": "Normal",
									"Subject": "MDEASM Alert: @body('Scheduled_Query_to_EASM')?['totalElements'] Assets detected matching your monitoring query",
									"To": "TestEmail@test.com"
								},
								"host": {
									"connection": {
										"name": "@parameters('$connections')['office365']['connectionId']"
									}
								},
								"method": "post",
								"path": "/v2/Mail"
							}
						},
						"Update_EASM_Asset": {
							"runAfter": {
								"Send_an_email_(V2)": [
									"Succeeded"
								]
							},
							"limit": {
								"timeout": "PT90S"
							},
							"type": "Http",
							"inputs": {
								"authentication": {
									"audience": "https://easm.defender.microsoft.com/",
									"clientId": "@parameters('ClientId')",
									"secret": "@body('Get_secret')?['value']",
									"tenant": "@parameters('TenantId')",
									"type": "ActiveDirectoryOAuth"
								},
								"body": {
									"labels": {
										"@{parameters('LabelName')}": true
									}
								},
								"headers": {
									"Content-Type": "application/json",
									"User-Agent": "GitHub-LogicApps-EmailAlerts"
								},
								"method": "PATCH",
								"queries": {
									"api-version": "@parameters('api-version')",
									"filter": "@{parameters('filter')} and label != @{parameters('LabelName')}"
								},
								"retryPolicy": {
									"count": 10,
									"interval": "PT20S",
									"type": "fixed"
								},
								"uri": "https://@{parameters('Region')}.easm.defender.microsoft.com/subscriptions/@{parameters('SubscriptionId')}/resourceGroups/@{parameters('ResourceGroupName')}/workspaces/@{parameters('EASMWorkspaceName')}/assets"
							},
							"description": "Update Alerted EASM Assets with a label to track history "
						}
					},
					"outputs": {}
				},
				"parameters": {
					"$connections": {
						"value": {
							"keyvault_1": {
								"connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
								"connectionName": "[variables('KeyvaultConnectionName')]",
								"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
							},
							"office365": {
								"connectionId": "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
								"connectionName": "[variables('Office365ConnectionName')]",
								"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
							}
						}
					},
					"ClientId": {
						"value": "[parameters('ClientId')]"
					},
					"EASMWorkspaceName": {
						"value": "[parameters('EASMWorkspaceName')]"
					},
					"KeyVaultSecretName": {
						"value": "[parameters('KeyVaultSecretName')]"
					},
					"LabelName": {
						"value": "[parameters('LabelName')]"
					},
					"RunFrequency": {
						"value": "[parameters('RunFrequency')]"
					},
					"api-version": {
						"value": "[parameters('api-version')]"
					},
					"filter": {
						"value": "[parameters('filter')]"
					},
					"Region": {
						"value": "[parameters('Region')]"
					},
					"maxpagesize": {
						"value": "[parameters('maxpagesize')]"
					}	
				}
			}
		}
	]
}